import datetime
from faker import Faker
import random

f = Faker(["pl_PL"])

payment_statuses = [
    "Paid in full",
    "Partial payment received",
    "Payment pending",
    "Payment overdue",
    "Payment failed",
    "Payment refunded",
    "Payment cancelled",
    "Payment in process",
    "Payment on hold",
    "Payment not required",
    "Payment not accepted",
    "Payment not applicable",
    "Payment not authorized",
    "Payment received",
    "Payment submitted",
    "Payment confirmed",
    "Payment processed",
    "Payment completed",
    "Payment acknowledged",
    "Payment reconciled",
    "Payment settled",
    "Payment verified",
    "Payment approved",
    "Payment declined",
    "Payment rejected",
    "Payment disputed",
    "Payment cancelled by customer",
    "Payment cancelled by merchant",
    "Payment delayed",
    "Payment re-submitted",
    "Payment rescheduled",
    "Payment refund requested",
    "Payment refunded partially",
    "Payment refunded in full",
    "Payment in transit",
    "Payment in dispute",
    "Payment under review",
    "Payment not yet cleared",
    "Payment not yet processed",
    "Payment not yet approved",
    "Payment not yet completed",
    "Payment not yet reconciled",
    "Payment not yet settled",
    "Payment not yet verified",
    "Payment not yet acknowledged",
    "Payment not yet acknowledged by bank",
    "Payment not yet acknowledged by merchant",
    "Payment not yet acknowledged by customer",
    "Payment not yet acknowledged by system",
    "Payment not yet acknowledged by payment gateway",
    "Payment not yet acknowledged by financial institution",
    "Payment not yet acknowledged by processor",
    "Payment not yet acknowledged by issuer",
    "Payment not yet acknowledged by acquirer",
    "Payment not yet acknowledged by network",
    "Payment not yet acknowledged by clearing house",
    "Payment not yet acknowledged by settlement institution",
]

# for status in payment_statuses:
#     print(f"EXEC AddPaymentStatus '{status}'")

cities_and_towns = list(
    set(
        [
            "Kutno",
            "Kędzierzyn-Koźle",
            "Zduńska Wola",
            "Tarnobrzeg",
            "Chorzów",
            "Polkowice",
            "Nowy Targ",
            "Łowicz",
            "Tychy",
            "Kwidzyn",
            "Skierniewice",
            "Września",
            "Zgorzelec",
            "Dzierżoniów",
            "Żywiec",
            "Kościan",
            "Świecie",
            "Brzeg",
            "Kościerzyna",
            "Inowrocław",
            "Koszalin",
            "Mikołów",
            "Legionowo",
            "Biała Podlaska",
            "Kluczbork",
            "Czeladź",
            "Bochnia",
            "Ruda Śląska",
            "Łuków",
            "Siedlce",
            "Lublin",
            "Chrzanów",
            "Jarocin",
            "Katowice",
            "Bartoszyce",
            "Ostróda",
            "Chełm",
            "Augustów",
            "Żagań",
            "Świętochłowice",
            "Wołomin",
            "Zawiercie",
            "Poznań",
            "Siemianowice Śląskie",
            "Chojnice",
            "Kalisz",
            "Ząbki",
            "Wałbrzych",
            "Ciechanów",
            "Płock",
            "Mysłowice",
            "Sopot",
            "Gdańsk",
            "Pruszcz Gdański",
            "Gliwice",
            "Kętrzyn",
            "Oświęcim",
            "Jasło",
            "Giżycko",
            "Lubin",
            "Nowa Ruda",
            "Mława",
            "Płońsk",
            "Jaworzno",
            "Przemyśl",
            "Mińsk Mazowiecki",
            "Wrocław",
            "Sieradz",
            "Piekary Śląskie",
            "Nysa",
            "Grudziądz",
            "Koło",
            "Gdynia",
            "Tarnów",
            "Świdnica",
            "Luboń",
            "Goleniów",
            "Zakopane",
            "Sandomierz",
            "Zamość",
            "Dębica",
            "Piaseczno",
            "Jastrzębie-Zdrój",
            "Słupsk",
            "Bielawa",
            "Żary",
            "Kłodzko",
            "Włocławek",
            "Żyrardów",
            "Gniezno",
            "Warszawa",
            "Police",
            "Opole",
            "Tczew",
            "Otwock",
            "Tarnowskie Góry",
            "Stalowa Wola",
            "Wodzisław Śląski",
            "Białystok",
            "Pszczyna",
            "Racibórz",
            "Krotoszyn",
            "Marki",
            "Iława",
            "Ełk",
            "Legnica",
            "Wejherowo",
            "Środa Wielkopolska",
            "Mielec",
            "Śrem",
            "Pruszków",
            "Częstochowa",
            "Rzeszów",
            "Starachowice",
            "Gorzów Wielkopolski",
            "Puławy",
            "Olkusz",
            "Świebodzice",
            "Gorlice",
            "Bielsko-Biała",
            "Piła",
            "Toruń",
            "Oława",
            "Oleśnica",
            "Skawina",
            "Świdnik",
            "Łaziska Górne",
            "Kielce",
            "Jarosław",
            "Ostrowiec Świętokrzyski",
            "Stargard Szczeciński",
            "Knurów",
            "Myszków",
            "Swarzędz",
            "Ostrołęka",
            "Łódź",
            "Kołobrzeg",
            "Olsztyn",
            "Suwałki",
            "Będzin",
            "Wyszków",
            "Cieszyn",
            "Czechowice-Dziedzice",
            "Ostrów Wielkopolski",
            "Sochaczew",
            "Biłgoraj",
            "Piotrków Trybunalski",
            "Łomża",
            "Nowy Dwór Mazowiecki",
            "Sosnowiec",
            "Jawor",
            "Świnoujście",
            "Grodzisk Mazowiecki",
            "Dąbrowa Górnicza",
            "Elbląg",
            "Turek",
            "Brodnica",
            "Zielona Góra",
            "Piastów",
            "Rumia",
            "Czerwionka-Leszczyny",
            "Szczecin",
            "Głogów",
            "Szczecinek",
            "Bydgoszcz",
            "Wągrowiec",
            "Bytom",
            "Białogard",
            "Starogard Gdański",
            "Pabianice",
            "Wałcz",
            "Krosno",
            "Sanok",
            "Lubliniec",
            "Skarżysko-Kamienna",
            "Zgierz",
            "Kraśnik",
            "Zabrze",
            "Leszno",
            "Bolesławiec",
            "Szczytno",
            "Nowa Sól",
            "Malbork",
            "Kraków",
            "Ostrów Mazowiecka",
            "Lubartów",
            "Zambrów",
            "Bełchatów",
            "Radom",
            "Nowy Sącz",
            "Radomsko",
            "Jelenia Góra",
            "Lębork",
            "Bielsk Podlaski",
            "Żory",
            "Wieluń",
            "Konin",
            "Reda",
            "Tomaszów Mazowiecki",
            "Rybnik",
        ]
    )
)


# for i in range(500):
#     postal_code = f.postcode()
#     localNR = f.bothify(text="##?", letters="ABCDEFGHIJKLMNOPQRSTUVWXYZ")
#     street = f.street_name()
#     print(
#         "EXEC AddAddress",
#         f"'{street}', '{localNR}', '{postal_code}', '{random.choice(cities_and_towns)}'",
#     )
positions = [
    "Manager",
    "Chef",
    "Sous Chef",
    "Line Cook",
    "Dishwasher",
    "Server",
    "Host/Hostess",
    "Busser",
    "Food Runner",
    "Food Expediter",
    "Cashier",
    "Barista",
    "Pastry Chef",
]

# for i in range(13):
#     LastName = f.last_name()
#     FirstName = f.first_name()
#     position_index = f.unique.random_int(0, 12)
#     email = f.email()
#     phone = f.phone_number()
#     # remove spaces from phone number
#     phone = phone.replace(" ", "")
#     phone = phone.replace("+", "")
#     addressID = random.randint(1, 500)
#     print(
#         "EXEC addStaffMember",
#         f"'{LastName}', '{FirstName}', '{positions[position_index]}', '{email}', '{phone}', {addressID}",
#     )

# for i in range(30):
#     LastName = f.last_name()
#     FirstName = f.first_name()
#     if FirstName[-1] == "a":
#         position = random.choice(["Waitress", "Food Runner", "Busser"])
#     else:
#         position = random.choice(["Waiter", "Food Runner", "Busser"])
#     email = f.email()
#     phone = f.phone_number()
#     # remove spaces from phone number
#     phone = phone.replace(" ", "")
#     phone = phone.replace("+", "")
#     addressID = random.randint(1, 500)
#     print(
#         "EXEC addStaffMember",
#         f"'{LastName}', '{FirstName}', '{position}', '{email}', '{phone}', {addressID}",
# )


# add individual customers

# for i in range(200):
#     client_type = "I"
#     LastName = f.last_name()
#     FirstName = f.first_name()
#     email = f.email()
#     phone = f.phone_number()
#     # remove spaces from phone number
#     phone = phone.replace(" ", "")
#     phone = phone.replace("+", "")
#     addressID = random.randint(1, 500)
#     print(
#         "EXEC addClient",
#         f"@ClientType='{client_type}', @FirstName='{FirstName}', @LastName={LastName}, @Email='{email}', @Phone='{phone}', @AddressID={addressID}",
#     )


# add companies customers

# for i in range(130):
#     client_type = "C"
#     company_name = f.company()
#     email = f.email()
#     phone = f.unique.phone_number()
#     # remove spaces from phone number
#     phone = phone.replace(" ", "")
#     phone = phone.replace("+", "")
#     nip = f.numerify(text="##########")
#     if random.random() < 0.8:
#         krs = f.numerify(text="##########")
#     else:
#         krs = "NULL"
#     if random.random() < 0.8:
#         regon = f.numerify(text="#########")
#     else:
#         regon = "NULL"
#     addressID = random.randint(1, 500)

#     if krs == "NULL" and regon == "NULL":
#         print(
#             "EXEC addClient",
#             f"@ClientType='{client_type}', @CompanyName='{company_name}', @Email='{email}', @Phone='{phone}', @AddressID={addressID}, @NIP='{nip}', @KRS={krs}, @REGON={regon}",
#         )
#     elif krs == "NULL":
#         print(
#             "EXEC addClient",
#             f"@ClientType='{client_type}', @CompanyName='{company_name}', @Email='{email}', @Phone='{phone}', @AddressID={addressID}, @NIP='{nip}', @KRS={krs}, @REGON='{regon}'",
#         )
#     elif regon == "NULL":
#         print(
#             "EXEC addClient",
#             f"@ClientType='{client_type}', @CompanyName='{company_name}', @Email='{email}', @Phone='{phone}', @AddressID={addressID}, @NIP='{nip}', @KRS='{krs}', @REGON={regon}",
#         )
#     else:
#         print(
#             "EXEC addClient",
#             f"@ClientType='{client_type}', @CompanyName='{company_name}', @Email='{email}', @Phone='{phone}', @AddressID={addressID}, @NIP='{nip}', @KRS='{krs}', @REGON='{regon}'",
#         )


# Reservation Vars

# for i in range(200):
#     WZ = random.randint(30, 150)
#     WK = random.randint(5, 30)
#     startDate = f.date_between(start_date="-2y", end_date="-1y")
#     endDate = startDate + datetime.timedelta(days=random.randint(10, 180))
#     print(
#         "EXEC addReservation",
#         f"@WZ={WZ}, @WK={WK}, @StartDate='{startDate}', @EndDate='{endDate}'",
#     )

#  add employees to company

# for i in range(90):
#     company_id = random.randint(201, 231)
#     employee_id = f.unique.random_int(1, 200)
#     print(
#         "EXEC addEmployeeToCompany", f"@CompanyID={company_id}, @PersonID={employee_id}"
#     )
coffee_list = [
    "Espresso",
    "Cappuccino",
    "Latte",
    "Macchiato",
    "Americano",
    "Mocha",
    "Cortado",
    "Flat white",
    "Affogato",
    "Café au lait",
    "Café bombón",
    "Café mélange",
    "Café mocha",
    "Café zorro",
    "Café Cubano",
    "Café con leche",
    "Café crema",
    "Café de olla",
    "Café de pico",
    "Café del mar",
    "Café gourmand",
    "Café irlandés",
    "Café marrón",
    "Café mélange",
    "Black tea",
    "Green tea",
    "Oolong tea",
    "White tea",
    "Yellow tea",
    "Pu-erh tea",
]
# for i in range(16, 22):
#     menu_id = 3
#     product = coffee_list[i]
#     price = random.randint(10, 50)
#     print(
#         "EXEC addProductToMenu", f"@MenuID={menu_id}, @Name='{product}', @Price={price}"
#     )


# waitress = [14, 15, 16, 18, 19, 21, 25, 31, 32, 34, 37]
# options = ["denied", "completed", "cancelled"]
# for i in range(300):
#     client_id = random.randint(1, 330)
#     paymentstatus_id = 1
#     paymentmethod_id = random.randint(1, 20)
#     staff_id = random.choice(waitress)
#     order_sum = 0
#     order_date = f.date_between(start_date="-2y", end_date="-1y")
#     order_date = datetime.datetime.strptime(
#         order_date.strftime("%Y-%m-%d-%H:%M:%S"), "%Y-%m-%d-%H:%M:%S"
#     )
#     order_date = order_date + datetime.timedelta(hours=8 + random.randint(0, 8))

#     order_completion_date = order_date + datetime.timedelta(hours=random.random() * 2)
#     order_date = order_date.strftime("%Y-%m-%d %H:%M:%S")
#     order_completion_date = order_completion_date.strftime("%Y-%m-%d %H:%M:%S")
#     if random.random() < 0.8:
#         orderStatus = "completed"
#     else:
#         if random.random() < 0.5:
#             orderStatus = "cancelled"
#         else:
#             orderStatus = "denied"
#     with open("orders.sql", "a") as file:
#         file.write(
#             f"INSERT INTO Orders(ClientID, PaymentStatusID, PaymentMethodID, staffID, OrderSum, OrderDate,OrderCompletionDate, OrderStatus) VALUES ({client_id}, {paymentstatus_id}, {paymentmethod_id}, {staff_id}, {order_sum}, CAST('{order_date}' AS datetime), CAST('{order_completion_date}' AS datetime), '{orderStatus}');\n"
#         )


orders = [
    2,
    304,
    605,
    906,
    907,
    908,
    909,
    910,
    911,
    912,
    913,
    914,
    915,
    916,
    917,
    918,
    919,
    920,
    921,
    922,
    923,
    924,
    925,
    926,
    927,
    928,
    929,
    930,
    931,
    932,
    933,
    934,
    935,
    936,
    937,
    938,
    939,
    940,
    941,
    942,
    943,
    944,
    945,
    946,
    947,
    948,
    949,
    950,
    951,
    952,
    953,
    954,
    955,
    956,
    957,
    958,
    959,
    960,
    961,
    962,
    963,
    964,
    965,
    966,
    967,
    968,
    969,
    970,
    971,
    972,
    973,
    974,
    975,
    976,
    977,
    978,
    979,
    980,
    981,
    982,
    983,
    984,
    985,
    986,
    987,
    988,
    989,
    990,
    991,
    992,
    993,
    994,
    995,
    996,
    997,
    998,
    999,
    1000,
    1001,
    1002,
    1003,
    1004,
    1005,
    1006,
    1007,
    1008,
    1009,
    1010,
    1011,
    1012,
    1013,
    1014,
    1015,
    1016,
    1017,
    1018,
    1019,
    1020,
    1021,
    1022,
    1023,
    1024,
    1025,
    1026,
    1027,
    1028,
    1029,
    1030,
    1031,
    1032,
    1033,
    1034,
    1035,
    1036,
    1037,
    1038,
    1039,
    1040,
    1041,
    1042,
    1043,
    1044,
    1045,
    1046,
    1047,
    1048,
    1049,
    1050,
    1051,
    1052,
    1053,
    1054,
    1055,
    1056,
    1057,
    1058,
    1059,
    1060,
    1061,
    1062,
    1063,
    1064,
    1065,
    1066,
    1067,
    1068,
    1069,
    1070,
    1071,
    1072,
    1073,
    1074,
    1075,
    1076,
    1077,
    1078,
    1079,
    1080,
    1081,
    1082,
    1083,
    1084,
    1085,
    1086,
    1087,
    1088,
    1089,
    1090,
    1091,
    1092,
    1093,
    1094,
    1095,
    1096,
    1097,
    1098,
    1099,
    1100,
    1101,
    1102,
    1103,
    1104,
    1105,
    1106,
    1107,
    1108,
    1109,
    1110,
    1111,
    1112,
    1113,
    1114,
    1115,
    1116,
    1117,
    1118,
    1119,
    1120,
    1121,
    1122,
    1123,
    1124,
    1125,
    1126,
    1127,
    1128,
    1129,
    1130,
    1131,
    1132,
    1133,
    1134,
    1135,
    1136,
    1137,
    1138,
    1139,
    1140,
    1141,
    1142,
    1143,
    1144,
    1145,
    1146,
    1147,
    1148,
    1149,
    1150,
    1151,
    1152,
    1153,
    1154,
    1155,
    1156,
    1157,
    1158,
    1159,
    1160,
    1161,
    1162,
    1163,
    1164,
    1165,
    1166,
    1167,
    1168,
    1169,
    1170,
    1171,
    1172,
    1173,
    1174,
    1175,
    1176,
    1177,
    1178,
    1179,
    1180,
    1181,
    1182,
    1183,
    1184,
    1185,
    1186,
    1187,
    1188,
    1189,
    1190,
    1191,
    1192,
    1193,
    1194,
    1195,
    1196,
    1197,
    1198,
    1199,
    1200,
    1201,
    1202,
    1203,
    1204,
    1205,
    1206,
    1207,
    1208,
    1209,
    1210,
    1211,
    1212,
    1213,
    1214,
    1215,
    1216,
    1217,
    1218,
    1219,
    1220,
    1221,
    1222,
    1223,
    1224,
    1225,
    1226,
    1227,
    1228,
    1229,
    1230,
    1231,
    1232,
    1233,
    1234,
    1235,
    1236,
    1237,
    1238,
    1239,
    1240,
    1241,
    1242,
    1243,
    1244,
    1245,
    1246,
    1247,
    1248,
    1249,
    1250,
    1251,
    1252,
    1253,
    1254,
    1255,
    1256,
    1257,
    1258,
    1259,
    1260,
    1261,
    1262,
    1263,
    1264,
    1265,
    1266,
    1267,
    1268,
    1269,
    1270,
    1271,
    1272,
    1273,
    1274,
    1275,
    1276,
    1277,
    1278,
    1279,
    1280,
    1281,
    1282,
    1283,
    1284,
    1285,
    1286,
    1287,
    1288,
    1289,
    1290,
    1291,
    1292,
    1293,
    1294,
    1295,
    1296,
    1297,
    1298,
    1299,
    1300,
    1301,
    1302,
    1303,
    1304,
    1305,
    1306,
    1307,
    1308,
    1309,
    1310,
    1311,
    1312,
    1313,
    1314,
    1315,
    1316,
    1317,
    1318,
    1319,
    1320,
    1321,
    1322,
    1323,
    1324,
    1325,
    1326,
    1327,
    1328,
    1329,
    1330,
    1331,
    1332,
    1333,
    1334,
    1335,
    1336,
    1337,
    1338,
    1339,
    1340,
    1341,
    1342,
    1343,
    1344,
    1345,
    1346,
    1347,
    1348,
    1349,
    1350,
    1351,
    1352,
    1353,
    1354,
    1355,
    1356,
    1357,
    1358,
    1359,
    1360,
    1361,
    1362,
    1363,
    1364,
    1365,
    1366,
    1367,
    1368,
    1369,
    1370,
    1371,
    1372,
    1373,
    1374,
    1375,
    1376,
    1377,
    1378,
    1379,
    1380,
    1381,
    1382,
    1383,
    1384,
    1385,
    1386,
    1387,
    1388,
    1389,
    1390,
    1391,
    1392,
    1393,
    1394,
    1395,
    1396,
    1397,
    1398,
    1399,
    1400,
    1401,
    1402,
]

products = [
    "Espresso",
    "Cappuccino",
    "Latte",
    "Macchiato",
    "Americano",
    "Mocha",
    "Cortado",
    "Flat white",
    "Affogato",
    "Café au lait",
    "Café bombón",
    "Café mélange",
    "Café mocha",
    "Café zorro",
    "Café Cubano",
    "Café con leche",
    "Café crema",
    "Café de olla",
    "Café de pico",
    "Café del mar",
    "Café gourmand",
    "Café irlandés",
    "Café marrón",
    "Café mélange",
    "Black tea",
    "Green tea",
    "Oolong tea",
    "White tea",
    "Yellow tea",
    "Pu-erh tea",
    "Herbal tea",
    "Rooibos tea",
    "Mate tea",
    "Chai tea",
    "Matcha tea",
    "Kombucha tea",
    "Honeybush tea",
    "Apple juice",
    "Orange juice",
    "Grapefruit juice",
    "Pineapple juice",
    "Lemon juice",
    "Lime juice",
    "Grape juice",
    "Pomegranate juice",
    "Carrot juice",
    "Tomato juice",
    "Cranberry juice",
    "Strawberry juice",
    "Raspberry juice",
    "Blueberry juice",
    "Coca-Cola",
    "Pepsi",
    "Dr Pepper",
    "Mountain Dew",
    "Sprite",
    "7 Up",
    "Fanta",
    "Sierra Mist",
    "Diet Coke",
    "Diet Pepsi",
    "Diet Dr Pepper",
    "Diet Mountain Dew",
    "Diet Sprite",
    "Diet 7 Up",
    "Diet Fanta",
    "Diet Sierra Mist",
    "Coke Zero",
    "Chicken soup",
    "Beef soup",
    "Vegetable soup",
    "Tomato soup",
    "Potato soup",
    "Lentil soup",
    "Split pea soup",
    "Minestrone soup",
    "Clam chowder",
    "Corn chowder",
    "French onion soup",
    "Chicken noodle soup",
    "Chicken and rice soup",
    "Chicken and dumplings",
    "Chicken and wild rice soup",
    "Chicken tortilla soup",
    "Chicken and corn chowder",
    "Chicken and broccoli soup",
    "Chicken and mushroom soup",
    "Chicken and barley soup",
    "Caesar salad",
    "Greek salad",
    "Tossed salad",
    "Cobb salad",
    "Caprese salad",
    "Garden salad",
    "Chef salad",
    "Antipasto salad",
    "Spinach salad",
    "Fruit salad",
    "Potato salad",
    "Macaroni salad",
    "Cole slaw",
    "Beet salad",
    "Cucumber salad",
    "Tomato salad",
    "Avocado salad",
    "Asparagus salad",
    "Artichoke salad",
    "Broccoli salad",
    "Carrot salad",
    "Corn salad",
    "Guacamole",
    "Salsa",
    "Hummus",
    "Tzatziki",
    "Dip",
    "Deviled eggs",
    "Fried pickles",
    "Fried green tomatoes",
    "Fried okra",
    "Fried mushrooms",
    "Fried zucchini",
    "Fried calamari",
    "Fried mozzarella sticks",
    "Fried onion rings",
    "Fried potato skins",
    "Fried ravioli",
    "Baked brie",
    "Baked clams",
    "Baked crab dip",
    "Baked oysters",
    "Baked stuffed mushrooms",
    "Baked stuffed shrimp",
    "Baked stuffed clams",
    "Baked stuffed artichokes",
    "Baked stuffed zucchini",
    "Baked stuffed peppers",
    "Baked stuffed tomatoes",
    "Baked stuffed potatoes",
    "Baked stuffed squash",
    "Baked stuffed eggplant",
    "Baked stuffed mushrooms",
    "Baked stuffed shrimp",
    "Vegetable soup",
    "Vegetable lasagna",
    "Vegetable stir fry",
    "Vegetable curry",
    "Vegetable stew",
    "Vegetable chili",
    "Fish",
    "Fish roll",
    "Fish stick",
    "Fish sandwich",
    "Fish sandwich roll",
    "Fish sandwich stick",
    "Fish sandwich bun",
    "Beef stew with dumplings",
    "Beef stew with potatoes",
    "Beef stew with carrots",
    "Beef stew with mushrooms",
    "Beef stew with onions",
    "Beef stew with celery",
    "Beef stew with tomatoes",
    "Beef stew with cabbage",
    "Pasta with meatballs",
    "Pasta with sausage",
    "Pasta with chicken",
    "Pasta with shrimp",
    "Pasta with clams",
    "Pasta with mussels",
    "Pasta with scallops",
    "Pasta with lobster",
    "Pasta with crab",
    "Pasta with salmon",
    "Pasta with tuna",
    "Pasta with eggplant",
    "Pasta with zucchini",
    "Pasta with mushrooms",
    "Pasta with onions",
    "Pasta with tomatoes",
    "Pasta with spinach",
    "Pasta with broccoli",
    "Pasta with cauliflower",
    "Chicken casserole",
    "Beef casserole",
    "Vegetable casserole",
    "Angel food cake",
    "Banana cake",
    "Black forest cake",
    "Boston cream cake",
    "Bundt cake",
    "Carrot cake",
    "Cheesecake",
    "Chocolate cake",
    "Coffee cake",
    "Coconut cake",
    "Vanilla ice cream",
    "Chocolate ice cream",
    "Strawberry ice cream",
    "Mint chocolate chip ice cream",
    "Pistachio ice cream",
    "Rocky road ice cream",
    "Butter pecan ice cream",
    "Moose tracks ice cream",
    "Cookies and cream ice cream",
    "Chocolate chip cookie dough ice cream",
    "Chocolate peanut butter ice cream",
    "Chocolate chip ice cream",
    "Mint chocolate chip ice cream",
    "Pistachio ice cream",
    "Rocky road ice cream",
    "Butter pecan ice cream",
    "Moose tracks ice cream",
    "Apple",
    "Apricot",
    "Avocado",
    "Banana",
    "Blackberry",
    "Blueberry",
    "Cherry",
    "Coconut",
    "Cranberry",
    "Date",
    "Fig",
    "Grape",
    "Grapefruit",
    "Guava",
    "Kiwi",
    "Lemon",
    "Lime",
    "Mango",
    "Melon",
    "Orange",
    "Apple pudding",
    "Banana pudding",
    "Chocolate pudding",
    "Coconut pudding",
    "Lemon pudding",
    "Peach pudding",
    "Pumpkin pudding",
    "Rice pudding",
    "Strawberry pudding",
    "Vanilla pudding",
    "Apple custard",
    "Banana custard",
    "Chocolate custard",
    "Coconut custard",
    "Lemon custard",
    "Peach custard",
    "American cheese",
    "Cheddar cheese",
    "Swiss cheese",
    "Mozzarella cheese",
    "Provolone cheese",
    "Pepper jack cheese",
    "Gouda cheese",
    "Brie cheese",
    "Gruyere cheese",
    "Parmesan cheese",
    "Romano cheese",
    "Asiago cheese",
    "Feta cheese",
    "Goat cheese",
    "Muenster cheese",
    "Bleu cheese",
    "Boursin cheese",
    "Burrata cheese",
    "Alfredo sauce",
    "Bechamel sauce",
    "Béarnaise sauce",
    "Bisque sauce",
    "Brown sauce",
    "Caper sauce",
    "Caramel sauce",
    "Chimichurri sauce",
    "Chutney sauce",
    "Cocktail sauce",
    "Curry sauce",
    "Dijon sauce",
    "Dressing sauce",
    "Allspice",
    "Anise",
    "Basil",
    "Bay leaf",
    "Caraway",
    "Cardamom",
    "Cayenne",
    "Celery seed",
    "Chili",
    "Cinnamon",
    "Cloves",
    "Coriander",
    "Cumin",
    "Curry",
    "Grilled salmon with a lemon butter sauce",
    "Pan-seared scallops with a white wine sauce",
    "Shrimp scampi served over pasta",
    "Crab cakes with a remoulade sauce",
    "Lobster tail with drawn butter",
    "Tuna tartare with avocado and soy sauce",
    "Oysters Rockefeller (oysters baked with a spinach and butter sauce)",
    "Clam chowder (a creamy soup made with clams)",
    "Calamari fritti (deep-fried squid)",
    "Grilled octopus with a citrus marinade",
    "Fish and chips (battered and fried fish served with French fries)",
    "Cioppino (a seafood stew made with a variety of fish and shellfish)",
    "Baguette",
    "Brioche",
    "Bread",
    "Breadstick",
    "Bun",
    "Butter",
    "Butter roll",
    "Biscuit",
    "Biscotti",
    "Biscuit roll",
    "Biscuit stick",
    "Biscuit sandwich",
    "Biscuit sandwich roll",
    "Biscuit sandwich stick",
    "Biscuit sandwich bun",
    "Cookie",
    "Cookie roll",
    "Cookie stick",
    "Cookie sandwich",
    "Cookie sandwich roll",
    "Cookie sandwich stick",
    "Cookie sandwich bun",
    "Cereal",
    "Cereal roll",
    "Cereal stick",
    "Cereal sandwich",
    "Cereal sandwich roll",
    "Cereal sandwich stick",
    "Almond",
    "Cashew",
    "Chestnut",
    "Coconut",
    "Hazelnut",
    "Macadamia",
    "Peanut",
    "Pecan",
    "Pistachio",
    "Walnut",
    "Chocolate",
    "Chocolate bar",
    "Chocolate candy",
    "Chocolate candy bar",
    "Chocolate candy stick",
    "Chocolate candy roll",
    "Chocolate candy sandwich",
    "Chocolate candy sandwich roll",
]

# for i in range(401, 500):
#     order_id = orders[i]
#     for i in range(5):
#         quantity = random.randint(1, 3)
#         product = random.choice(products)
#         print("addProductToOrder(%d, %d, '%s')" % (order_id, quantity, product))
menu_id = 3
for product in products:
    price = random.randint(12, 35)
    print("EXEC addProductToMenu '%s', '%d', %d;" % (product, menu_id, price))
