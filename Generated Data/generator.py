import datetime
import math
from faker import Faker
import random

f = Faker(["pl_PL"])

payment_statuses = [
    "Paid in full",
    "Partial payment received",
    "Payment pending",
    "Payment overdue",
    "Payment failed",
    "Payment refunded",
    "Payment cancelled",
    "Payment in process",
    "Payment on hold",
    "Payment not required",
    "Payment not accepted",
    "Payment not applicable",
    "Payment not authorized",
    "Payment received",
    "Payment submitted",
    "Payment confirmed",
    "Payment processed",
    "Payment completed",
    "Payment acknowledged",
    "Payment reconciled",
    "Payment settled",
    "Payment verified",
    "Payment approved",
    "Payment declined",
    "Payment rejected",
    "Payment disputed",
    "Payment cancelled by customer",
    "Payment cancelled by merchant",
    "Payment delayed",
    "Payment re-submitted",
    "Payment rescheduled",
    "Payment refund requested",
    "Payment refunded partially",
    "Payment refunded in full",
    "Payment in transit",
    "Payment in dispute",
    "Payment under review",
    "Payment not yet cleared",
    "Payment not yet processed",
    "Payment not yet approved",
    "Payment not yet completed",
    "Payment not yet reconciled",
    "Payment not yet settled",
    "Payment not yet verified",
    "Payment not yet acknowledged",
    "Payment not yet acknowledged by bank",
    "Payment not yet acknowledged by merchant",
    "Payment not yet acknowledged by customer",
    "Payment not yet acknowledged by system",
    "Payment not yet acknowledged by payment gateway",
    "Payment not yet acknowledged by financial institution",
    "Payment not yet acknowledged by processor",
    "Payment not yet acknowledged by issuer",
    "Payment not yet acknowledged by acquirer",
    "Payment not yet acknowledged by network",
    "Payment not yet acknowledged by clearing house",
    "Payment not yet acknowledged by settlement institution",
]

# for status in payment_statuses:
#     print(f"EXEC AddPaymentStatus '{status}'")

cities_and_towns = list(
    set(
        [
            "Kutno",
            "Kędzierzyn-Koźle",
            "Zduńska Wola",
            "Tarnobrzeg",
            "Chorzów",
            "Polkowice",
            "Nowy Targ",
            "Łowicz",
            "Tychy",
            "Kwidzyn",
            "Skierniewice",
            "Września",
            "Zgorzelec",
            "Dzierżoniów",
            "Żywiec",
            "Kościan",
            "Świecie",
            "Brzeg",
            "Kościerzyna",
            "Inowrocław",
            "Koszalin",
            "Mikołów",
            "Legionowo",
            "Biała Podlaska",
            "Kluczbork",
            "Czeladź",
            "Bochnia",
            "Ruda Śląska",
            "Łuków",
            "Siedlce",
            "Lublin",
            "Chrzanów",
            "Jarocin",
            "Katowice",
            "Bartoszyce",
            "Ostróda",
            "Chełm",
            "Augustów",
            "Żagań",
            "Świętochłowice",
            "Wołomin",
            "Zawiercie",
            "Poznań",
            "Siemianowice Śląskie",
            "Chojnice",
            "Kalisz",
            "Ząbki",
            "Wałbrzych",
            "Ciechanów",
            "Płock",
            "Mysłowice",
            "Sopot",
            "Gdańsk",
            "Pruszcz Gdański",
            "Gliwice",
            "Kętrzyn",
            "Oświęcim",
            "Jasło",
            "Giżycko",
            "Lubin",
            "Nowa Ruda",
            "Mława",
            "Płońsk",
            "Jaworzno",
            "Przemyśl",
            "Mińsk Mazowiecki",
            "Wrocław",
            "Sieradz",
            "Piekary Śląskie",
            "Nysa",
            "Grudziądz",
            "Koło",
            "Gdynia",
            "Tarnów",
            "Świdnica",
            "Luboń",
            "Goleniów",
            "Zakopane",
            "Sandomierz",
            "Zamość",
            "Dębica",
            "Piaseczno",
            "Jastrzębie-Zdrój",
            "Słupsk",
            "Bielawa",
            "Żary",
            "Kłodzko",
            "Włocławek",
            "Żyrardów",
            "Gniezno",
            "Warszawa",
            "Police",
            "Opole",
            "Tczew",
            "Otwock",
            "Tarnowskie Góry",
            "Stalowa Wola",
            "Wodzisław Śląski",
            "Białystok",
            "Pszczyna",
            "Racibórz",
            "Krotoszyn",
            "Marki",
            "Iława",
            "Ełk",
            "Legnica",
            "Wejherowo",
            "Środa Wielkopolska",
            "Mielec",
            "Śrem",
            "Pruszków",
            "Częstochowa",
            "Rzeszów",
            "Starachowice",
            "Gorzów Wielkopolski",
            "Puławy",
            "Olkusz",
            "Świebodzice",
            "Gorlice",
            "Bielsko-Biała",
            "Piła",
            "Toruń",
            "Oława",
            "Oleśnica",
            "Skawina",
            "Świdnik",
            "Łaziska Górne",
            "Kielce",
            "Jarosław",
            "Ostrowiec Świętokrzyski",
            "Stargard Szczeciński",
            "Knurów",
            "Myszków",
            "Swarzędz",
            "Ostrołęka",
            "Łódź",
            "Kołobrzeg",
            "Olsztyn",
            "Suwałki",
            "Będzin",
            "Wyszków",
            "Cieszyn",
            "Czechowice-Dziedzice",
            "Ostrów Wielkopolski",
            "Sochaczew",
            "Biłgoraj",
            "Piotrków Trybunalski",
            "Łomża",
            "Nowy Dwór Mazowiecki",
            "Sosnowiec",
            "Jawor",
            "Świnoujście",
            "Grodzisk Mazowiecki",
            "Dąbrowa Górnicza",
            "Elbląg",
            "Turek",
            "Brodnica",
            "Zielona Góra",
            "Piastów",
            "Rumia",
            "Czerwionka-Leszczyny",
            "Szczecin",
            "Głogów",
            "Szczecinek",
            "Bydgoszcz",
            "Wągrowiec",
            "Bytom",
            "Białogard",
            "Starogard Gdański",
            "Pabianice",
            "Wałcz",
            "Krosno",
            "Sanok",
            "Lubliniec",
            "Skarżysko-Kamienna",
            "Zgierz",
            "Kraśnik",
            "Zabrze",
            "Leszno",
            "Bolesławiec",
            "Szczytno",
            "Nowa Sól",
            "Malbork",
            "Kraków",
            "Ostrów Mazowiecka",
            "Lubartów",
            "Zambrów",
            "Bełchatów",
            "Radom",
            "Nowy Sącz",
            "Radomsko",
            "Jelenia Góra",
            "Lębork",
            "Bielsk Podlaski",
            "Żory",
            "Wieluń",
            "Konin",
            "Reda",
            "Tomaszów Mazowiecki",
            "Rybnik",
        ]
    )
)


# for i in range(500):
#     postal_code = f.postcode()
#     localNR = f.bothify(text="##?", letters="ABCDEFGHIJKLMNOPQRSTUVWXYZ")
#     street = f.street_name()
#     print(
#         "EXEC AddAddress",
#         f"'{street}', '{localNR}', '{postal_code}', '{random.choice(cities_and_towns)}'",
#     )
positions = [
    "Manager",
    "Chef",
    "Sous Chef",
    "Line Cook",
    "Dishwasher",
    "Server",
    "Host/Hostess",
    "Busser",
    "Food Runner",
    "Food Expediter",
    "Cashier",
    "Barista",
    "Pastry Chef",
]

# for i in range(13):
#     LastName = f.last_name()
#     FirstName = f.first_name()
#     position_index = f.unique.random_int(0, 12)
#     email = f.email()
#     phone = f.phone_number()
#     # remove spaces from phone number
#     phone = phone.replace(" ", "")
#     phone = phone.replace("+", "")
#     addressID = random.randint(1, 500)
#     print(
#         "EXEC addStaffMember",
#         f"'{LastName}', '{FirstName}', '{positions[position_index]}', '{email}', '{phone}', {addressID}",
#     )

# for i in range(30):
#     LastName = f.last_name()
#     FirstName = f.first_name()
#     if FirstName[-1] == "a":
#         position = random.choice(["Waitress", "Food Runner", "Busser"])
#     else:
#         position = random.choice(["Waiter", "Food Runner", "Busser"])
#     email = f.email()
#     phone = f.phone_number()
#     # remove spaces from phone number
#     phone = phone.replace(" ", "")
#     phone = phone.replace("+", "")
#     addressID = random.randint(1, 500)
#     print(
#         "EXEC addStaffMember",
#         f"'{LastName}', '{FirstName}', '{position}', '{email}', '{phone}', {addressID}",
# )


# add individual customers

# for i in range(200):
#     client_type = "I"
#     LastName = f.last_name()
#     FirstName = f.first_name()
#     email = f.email()
#     phone = f.phone_number()
#     # remove spaces from phone number
#     phone = phone.replace(" ", "")
#     phone = phone.replace("+", "")
#     addressID = random.randint(1, 500)
#     print(
#         "EXEC addClient",
#         f"@ClientType='{client_type}', @FirstName='{FirstName}', @LastName={LastName}, @Email='{email}', @Phone='{phone}', @AddressID={addressID}",
#     )


# add companies customers

# for i in range(130):
#     client_type = "C"
#     company_name = f.company()
#     email = f.email()
#     phone = f.unique.phone_number()
#     # remove spaces from phone number
#     phone = phone.replace(" ", "")
#     phone = phone.replace("+", "")
#     nip = f.numerify(text="##########")
#     if random.random() < 0.8:
#         krs = f.numerify(text="##########")
#     else:
#         krs = "NULL"
#     if random.random() < 0.8:
#         regon = f.numerify(text="#########")
#     else:
#         regon = "NULL"
#     addressID = random.randint(1, 500)

#     if krs == "NULL" and regon == "NULL":
#         print(
#             "EXEC addClient",
#             f"@ClientType='{client_type}', @CompanyName='{company_name}', @Email='{email}', @Phone='{phone}', @AddressID={addressID}, @NIP='{nip}', @KRS={krs}, @REGON={regon}",
#         )
#     elif krs == "NULL":
#         print(
#             "EXEC addClient",
#             f"@ClientType='{client_type}', @CompanyName='{company_name}', @Email='{email}', @Phone='{phone}', @AddressID={addressID}, @NIP='{nip}', @KRS={krs}, @REGON='{regon}'",
#         )
#     elif regon == "NULL":
#         print(
#             "EXEC addClient",
#             f"@ClientType='{client_type}', @CompanyName='{company_name}', @Email='{email}', @Phone='{phone}', @AddressID={addressID}, @NIP='{nip}', @KRS='{krs}', @REGON={regon}",
#         )
#     else:
#         print(
#             "EXEC addClient",
#             f"@ClientType='{client_type}', @CompanyName='{company_name}', @Email='{email}', @Phone='{phone}', @AddressID={addressID}, @NIP='{nip}', @KRS='{krs}', @REGON='{regon}'",
#         )


# Reservation Vars

# for i in range(200):
#     WZ = random.randint(30, 150)
#     WK = random.randint(5, 30)
#     startDate = f.date_between(start_date="-2y", end_date="-1y")
#     endDate = startDate + datetime.timedelta(days=random.randint(10, 180))
#     print(
#         "EXEC addReservation",
#         f"@WZ={WZ}, @WK={WK}, @StartDate='{startDate}', @EndDate='{endDate}'",
#     )

#  add employees to company

# for i in range(90):
#     company_id = random.randint(201, 231)
#     employee_id = f.unique.random_int(1, 200)
#     print(
#         "EXEC addEmployeeToCompany", f"@CompanyID={company_id}, @PersonID={employee_id}"
#     )
coffee_list = [
    "Espresso",
    "Cappuccino",
    "Latte",
    "Macchiato",
    "Americano",
    "Mocha",
    "Cortado",
    "Flat white",
    "Affogato",
    "Café au lait",
    "Café bombón",
    "Café mélange",
    "Café mocha",
    "Café zorro",
    "Café Cubano",
    "Café con leche",
    "Café crema",
    "Café de olla",
    "Café de pico",
    "Café del mar",
    "Café gourmand",
    "Café irlandés",
    "Café marrón",
    "Café mélange",
    "Black tea",
    "Green tea",
    "Oolong tea",
    "White tea",
    "Yellow tea",
    "Pu-erh tea",
]
# for i in range(16, 22):
#     menu_id = 3
#     product = coffee_list[i]
#     price = random.randint(10, 50)
#     print(
#         "EXEC addProductToMenu", f"@MenuID={menu_id}, @Name='{product}', @Price={price}"
#     )


# waitress = [14, 15, 16, 18, 19, 21, 25, 31, 32, 34, 37]
# options = ["denied", "completed", "cancelled"]
# for i in range(300):
#     client_id = random.randint(1, 330)
#     paymentstatus_id = 1
#     paymentmethod_id = random.randint(1, 20)
#     staff_id = random.choice(waitress)
#     order_sum = 0
#     order_date = f.date_between(start_date="-2y", end_date="-1y")
#     order_date = datetime.datetime.strptime(
#         order_date.strftime("%Y-%m-%d-%H:%M:%S"), "%Y-%m-%d-%H:%M:%S"
#     )
#     order_date = order_date + datetime.timedelta(hours=8 + random.randint(0, 8))

#     order_completion_date = order_date + datetime.timedelta(hours=random.random() * 2)
#     order_date = order_date.strftime("%Y-%m-%d %H:%M:%S")
#     order_completion_date = order_completion_date.strftime("%Y-%m-%d %H:%M:%S")
#     if random.random() < 0.8:
#         orderStatus = "completed"
#     else:
#         if random.random() < 0.5:
#             orderStatus = "cancelled"
#         else:
#             orderStatus = "denied"
#     with open("orders.sql", "a") as file:
#         file.write(
#             f"INSERT INTO Orders(ClientID, PaymentStatusID, PaymentMethodID, staffID, OrderSum, OrderDate,OrderCompletionDate, OrderStatus) VALUES ({client_id}, {paymentstatus_id}, {paymentmethod_id}, {staff_id}, {order_sum}, CAST('{order_date}' AS datetime), CAST('{order_completion_date}' AS datetime), '{orderStatus}');\n"
#         )


orders = [
    1103,
    1303,
    1403,
    1404,
    1405,
    1406,
    1407,
    1408,
    1409,
    1410,
    1411,
    1412,
    1413,
    1414,
    1415,
    1416,
    1417,
    1418,
    1419,
    1420,
    1421,
    1422,
    1423,
    1424,
    1425,
    1426,
    1427,
    1428,
    1429,
    1430,
    1431,
    1432,
    1433,
    1434,
    1435,
    1436,
    1437,
    1438,
    1439,
    1440,
    1441,
    1442,
    1443,
    1444,
    1445,
    1446,
    1447,
    1448,
    1449,
    1450,
    1451,
    1452,
    1453,
    1454,
    1455,
    1456,
    1457,
    1458,
    1459,
    1460,
    1461,
    1462,
    1463,
    1464,
    1465,
    1466,
    1467,
    1468,
    1469,
    1470,
    1471,
    1472,
    1473,
    1474,
    1475,
    1476,
    1477,
    1478,
    1479,
    1480,
    1481,
    1482,
    1483,
    1484,
    1485,
    1486,
    1487,
    1488,
    1489,
    1490,
    1491,
    1492,
    1493,
    1494,
    1495,
    1496,
    1497,
    1498,
    1499,
    1500,
    1501,
    1502,
    1503,
    1504,
    1505,
    1507,
    1508,
    1509,
    1510,
    1511,
    1512,
    1513,
    1514,
    1515,
    1516,
    1517,
    1518,
    1519,
    1520,
    1521,
    1522,
    1523,
    1524,
    1525,
    1526,
    1527,
    1528,
    1529,
    1530,
    1531,
    1532,
    1533,
    1534,
    1535,
    1536,
    1537,
    1538,
    1539,
    1540,
    1541,
    1542,
    1543,
    1544,
    1545,
    1546,
    1547,
    1548,
    1549,
    1550,
    1551,
    1552,
    1553,
    1554,
    1555,
    1556,
    1557,
    1558,
    1559,
    1560,
    1561,
    1562,
    1563,
    1564,
    1565,
    1566,
    1567,
    1568,
    1569,
    1570,
    1571,
    1572,
    1573,
    1574,
    1575,
    1576,
    1577,
    1578,
    1579,
    1580,
    1581,
    1582,
    1583,
    1584,
    1585,
    1586,
    1587,
    1588,
    1589,
    1590,
    1591,
    1592,
    1593,
    1594,
    1595,
    1596,
    1597,
    1598,
    1599,
    1600,
    1601,
    1602,
    1603,
    1604,
    1605,
    1606,
    1607,
    1608,
    1609,
    1610,
    1611,
    1612,
    1613,
    1614,
    1615,
    1616,
    1617,
    1618,
    1619,
    1620,
    1621,
    1622,
    1623,
    1624,
    1625,
    1626,
    1627,
    1628,
    1629,
    1630,
    1631,
    1632,
    1633,
    1634,
    1635,
    1636,
    1637,
    1638,
    1639,
    1640,
    1641,
    1642,
    1643,
    1644,
    1645,
    1646,
    1647,
    1648,
    1649,
    1650,
    1651,
    1652,
    1653,
    1654,
    1655,
    1656,
    1657,
    1658,
    1659,
    1660,
    1661,
    1662,
    1663,
    1664,
    1665,
    1666,
    1667,
    1668,
    1669,
    1670,
    1671,
    1672,
    1673,
    1674,
    1675,
    1676,
    1677,
    1678,
    1679,
    1680,
    1681,
    1682,
    1683,
    1684,
    1685,
    1686,
    1687,
    1688,
    1689,
    1690,
    1691,
    1692,
    1693,
    1694,
    1695,
    1696,
    1697,
    1698,
    1699,
    1700,
    1701,
    1702,
    1703,
    1704,
    1705,
    1706,
    1707,
    1708,
    1709,
    1710,
    1711,
    1712,
    1713,
    1714,
    1715,
    1716,
    1717,
    1718,
    1719,
    1720,
    1721,
    1722,
    1723,
    1724,
    1725,
    1726,
    1727,
    1728,
    1729,
    1730,
    1731,
    1732,
    1733,
    1734,
    1735,
    1736,
    1737,
    1738,
    1739,
    1740,
    1741,
    1742,
    1743,
    1744,
    1745,
    1746,
    1747,
    1748,
    1749,
    1750,
    1751,
    1752,
    1753,
    1754,
    1755,
    1756,
    1757,
    1758,
    1759,
    1760,
    1761,
    1762,
    1763,
    1764,
    1765,
    1766,
    1767,
    1768,
    1769,
    1770,
    1771,
    1772,
    1773,
    1774,
    1775,
    1776,
    1777,
    1778,
    1779,
    1780,
    1781,
    1782,
    1783,
    1784,
    1785,
    1786,
    1787,
    1788,
    1789,
    1790,
    1791,
    1792,
    1793,
    1794,
    1795,
    1796,
    1797,
    1798,
    1799,
    1800,
    1801,
    1802,
    1803,
    1804,
    1805,
    1806,
]

products = [
    "Biscuit sandwich bun",
    "Café con leche",
    "Pomegranate juice",
    "Fried mozzarella sticks",
    "Honeybush tea",
    "Caesar salad",
    "Pu-erh tea",
    "Cereal sandwich roll",
    "Beef stew with onions",
    "Coconut custard",
    "Cookie",
    "Baked stuffed squash",
    "Guava",
    "Strawberry ice cream",
    "Béarnaise sauce",
    "Grapefruit juice",
    "Coconut",
    "Baked oysters",
    "Diet Pepsi",
    "Butter roll",
    "Parmesan cheese",
    "Pasta with clams",
    "Carrot cake",
    "Cranberry",
    "Macadamia",
    "Fish stick",
    "Chocolate candy stick",
    "Bisque sauce",
    "Vegetable chili",
    "Sprite",
    "Blackberry",
    "Mountain Dew",
    "Deviled eggs",
    "Calamari fritti (deep-fried squid)",
    "Curry sauce",
    "Matcha tea",
    "Cereal",
    "Vegetable curry",
    "Café de pico",
    "Baked stuffed zucchini",
    "Celery seed",
    "Feta cheese",
    "Potato soup",
    "Baked stuffed shrimp",
    "Mozzarella cheese",
    "Cheesecake",
    "Lobster tail with drawn butter",
    "Orange juice",
    "Brown sauce",
    "Caper sauce",
    "Butter pecan ice cream",
    "Cortado",
    "Cookie stick",
    "Tzatziki",
    "White tea",
    "Cobb salad",
    "Café mélange",
    "Alfredo sauce",
    "Fish sandwich bun",
    "Vegetable stew",
    "Pasta with chicken",
    "Pepsi",
    "Chai tea",
    "Cereal sandwich stick",
    "Mate tea",
    "Peanut",
    "Raspberry juice",
    "Cereal roll",
    "Pineapple juice",
    "Pasta with cauliflower",
    "Cole slaw",
    "Chicken and wild rice soup",
    "Cookies and cream ice cream",
    "Grapefruit",
    "Pistachio",
    "Fried pickles",
    "Carrot juice",
    "Gruyere cheese",
    "Pasta with tomatoes",
    "Cookie sandwich",
    "7 Up",
    "Chocolate candy bar",
    "Chocolate pudding",
    "Beef stew with dumplings",
    "Diet Sprite",
    "Beet salad",
    "Caprese salad",
    "Shrimp scampi served over pasta",
    "Apple custard",
    "Chocolate custard",
    "Café au lait",
    "Vanilla pudding",
    "Baked brie",
    "Salsa",
    "Banana",
    "Blueberry",
    "Baked stuffed potatoes",
    "Cardamom",
    "Chocolate chip ice cream",
    "Strawberry pudding",
    "Fried ravioli",
    "Tomato juice",
    "Affogato",
    "Beef stew with cabbage",
    "Gouda cheese",
    "Chocolate candy sandwich roll",
    "Cookie sandwich stick",
    "Provolone cheese",
    "Caraway",
    "Split pea soup",
    "Beef stew with mushrooms",
    "Fig",
    "Green tea",
    "Bechamel sauce",
    "Vanilla ice cream",
    "Biscuit roll",
    "Breadstick",
    "Beef casserole",
    "Apricot",
    "Banana custard",
    "Avocado",
    "Curry",
    "Americano",
    "Corn salad",
    "Pasta with lobster",
    "Anise",
    "Baguette",
    "Crab cakes with a remoulade sauce",
    "Fried green tomatoes",
    "Pasta with sausage",
    "Pasta with broccoli",
    "Allspice",
    "Spinach salad",
    "Café zorro",
    "Kiwi",
    "Swiss cheese",
    "Chef salad",
    "Cinnamon",
    "Cayenne",
    "Dip",
    "Pasta with zucchini",
    "Lime juice",
    "Chicken tortilla soup",
    "Biscuit sandwich",
    "Pasta with tuna",
    "Broccoli salad",
    "Café mocha",
    "Pasta with mussels",
    "Walnut",
    "Cashew",
    "Pumpkin pudding",
    "Diet Sierra Mist",
    "Chocolate candy sandwich",
    "Diet Coke",
    "Pistachio ice cream",
    "Banana pudding",
    "Fried calamari",
    "Grape juice",
    "Baked stuffed artichokes",
    "Pepper jack cheese",
    "Lime",
    "American cheese",
    "Sierra Mist",
    "Cookie sandwich roll",
    "Baked stuffed peppers",
    "Pasta with onions",
    "Tossed salad",
    "Artichoke salad",
    "Café gourmand",
    "Carrot salad",
    "Moose tracks ice cream",
    "Greek salad",
    "Bay leaf",
    "Bun",
    "Biscuit",
    "Café crema",
    "Biscuit stick",
    "Chimichurri sauce",
    "Lemon juice",
    "Pan-seared scallops with a white wine sauce",
    "Chicken casserole",
    "Baked crab dip",
    "Brioche",
    "Vegetable stir fry",
    "Chili",
    "Espresso",
    "Grilled salmon with a lemon butter sauce",
    "Café Cubano",
    "Tomato soup",
    "Basil",
    "Burrata cheese",
    "Macaroni salad",
    "Asparagus salad",
    "Chocolate cake",
    "Chocolate",
    "Fish sandwich",
    "Fanta",
    "Coffee cake",
    "Almond",
    "Pasta with scallops",
    "Rice pudding",
    "Coca-Cola",
    "Cheddar cheese",
    "Guacamole",
    "Corn chowder",
    "Fried zucchini",
    "Date",
    "Brie cheese",
    "Biscuit sandwich stick",
    "Cloves",
    "Vegetable casserole",
    "Antipasto salad",
    "Cereal stick",
    "Yellow tea",
    "Cranberry juice",
    "Chicken and broccoli soup",
    "Tomato salad",
    "Dijon sauce",
    "Coconut cake",
    "Baked clams",
    "Chocolate ice cream",
    "Cereal sandwich",
    "Cappuccino",
    "Chocolate chip cookie dough ice cream",
    "Pasta with mushrooms",
    "Apple pudding",
    "French onion soup",
    "Chocolate candy roll",
    "Lemon pudding",
    "Hummus",
    "Fish sandwich stick",
    "Lemon",
    "Biscuit sandwich roll",
    "Black tea",
    "Asiago cheese",
    "Blueberry juice",
    "Apple juice",
    "Biscotti",
    "Kombucha tea",
    "Mocha",
    "Butter",
    "Grape",
    "Apple",
    "Chocolate candy",
    "Chicken and corn chowder",
    "Beef stew with carrots",
    "Beef stew with tomatoes",
    "Orange",
    "Mango",
    "Pasta with meatballs",
    "Lemon custard",
    "Romano cheese",
    "Café del mar",
    "Potato salad",
    "Fried okra",
    "Mint chocolate chip ice cream",
    "Cookie roll",
    "Bleu cheese",
    "Fish",
    "Avocado salad",
    "Oolong tea",
    "Herbal tea",
    "Coriander",
    "Café de olla",
    "Cumin",
    "Cherry",
    "Dressing sauce",
    "Minestrone soup",
    "Café marrón",
    "Fried mushrooms",
    "Fried potato skins",
    "Boursin cheese",
    "Beef stew with potatoes",
    "Pasta with crab",
    "Boston cream cake",
    "Pasta with salmon",
    "Chicken and barley soup",
    "Diet Dr Pepper",
    "Fish sandwich roll",
    "Coconut pudding",
    "Cocktail sauce",
    "Bundt cake",
    "Diet Mountain Dew",
    "Baked stuffed mushrooms",
    "Chocolate peanut butter ice cream",
    "Flat white",
    "Beef soup",
    "Baked stuffed eggplant",
    "Goat cheese",
    "Garden salad",
    "Diet Fanta",
    "Banana cake",
    "Hazelnut",
    "Tuna tartare with avocado and soy sauce",
    "Cookie sandwich bun",
    "Angel food cake",
    "Chestnut",
    "Chutney sauce",
    "Cucumber salad",
    "Baked stuffed tomatoes",
    "Pasta with shrimp",
    "Café irlandés",
    "Lentil soup",
    "Café bombón",
    "Fried onion rings",
    "Pasta with eggplant",
    "Vegetable lasagna",
    "Fish roll",
    "Chicken soup",
    "Diet 7 Up",
    "Bread",
    "Peach pudding",
    "Chicken and dumplings",
    "Muenster cheese",
    "Clam chowder",
    "Baked stuffed clams",
    "Coke Zero",
    "Macchiato",
    "Vegetable soup",
    "Chicken and mushroom soup",
    "Pecan",
    "Black forest cake",
    "Rocky road ice cream",
    "Peach custard",
    "Grilled octopus with a citrus marinade",
    "Rooibos tea",
    "Chocolate bar",
    "Fruit salad",
    "Pasta with spinach",
    "Caramel sauce",
    "Chicken and rice soup",
    "Latte",
    "Dr Pepper",
    "Chicken noodle soup",
    "Strawberry juice",
    "Melon",
    "Beef stew with celery",
]
products = list(set(products))
for i in range(1, 100):
    order_id = i
    random.shuffle(products)
    for i in products[:5]:
        quantity = random.randint(1, 3)
        print("EXEC addProductToOrder %d, %d, '%s'" % (order_id, quantity, i))
# menu_id = 3

# products = list(set(products))
# for product in products:
#     price = 5 + random.random() * ((35 - 5) + 1)
#     print("EXEC addProductToMenu '%s', %d, %f;" % (product, menu_id, round(price, 2)))
